scale_y_continuous(extends=c(0,0))+
theme_void() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
title =element_text(size=16),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(function.name), fill=as.factor(significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~., nrow=3) +
scale_y_continuous(extend=c(0,0))+
theme_void() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
title =element_text(size=16),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(function.name), fill=as.factor(significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~., nrow=3) +
scale_y_continuous( expand= c(0,0))+
theme_void() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
title =element_text(size=16),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(function.name), fill=as.factor(significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~., nrow=3) +
scale_y_continuous( expand= c(0,0))+
theme_bw() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
strip.background = element_blank(),
title =element_text(size=16),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(function.name), fill=as.factor(significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~., nrow=3) +
scale_y_continuous( expand= c(0,0))+
theme_bw() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
strip.background = element_blank(),
title =element_text(size=16),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(function.name), fill=as.factor(significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~., nrow=3) +
scale_y_continuous( expand= c(0,0))+
theme_bw() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
strip.background = element_blank(),
title =element_text(size=16),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(function.name), fill=as.factor(significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~., nrow=3) +
scale_y_continuous( expand= c(0,0))+
theme_bw() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
strip.background = element_blank(),
title =element_text(size=16),
panel.grid = element_blank(),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(function.name), fill=as.factor(significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~., nrow=3) +
scale_y_continuous( expand= c(0,0))+
theme_bw() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
strip.background = element_blank(),
title =element_text(size=16),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
ggsave(summary.stability.plot,
file = "figures/summary.stability.plot.pdf")
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(function.name), fill=as.factor(stability.significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~., nrow=3) +
scale_y_continuous( expand= c(0,0))+
theme_bw() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
strip.background = element_blank(),
title =element_text(size=16),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
summary.stability.plot <-  df.stability.summary.small %>%
#filter(comp.com !="no species" & comp.com !="run away population") %>%
ggplot(aes(x=as.factor(stability.significance), fill=as.factor(significance))) +
scale_fill_manual(values=  safe_colorblind_palette ) +
stat_count(position="stack")+
labs(title ="Percentage of community predicted to have at least one species in \nthe community with underlying dynamics",
#subtitle = " initial intraspecific interactions",
pattern= "Community composition",
fill = "Community dynamics",
y="Number of communities driven by a specific dynamics",
x="interaction function") +
guides(fill= guide_legend(override.aes = list(pattern = c("none")))) +
facet_wrap(as.factor(external_factor)~function.name, nrow=3) +
scale_y_continuous( expand= c(0,0))+
theme_bw() +
theme(panel.background = element_blank(),
legend.key.size = unit(1, 'cm'),
strip.background = element_blank(),
title =element_text(size=16),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text.x= element_text(size=16),
axis.text.y= element_text(size=16),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
strip.text = element_text(size=16))
summary.stability.plot
df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
ggplot(aes(fill=as.factor(function.int))) +
stat_count(aes(x=as.factor(value.stability))) +
theme_bw() +
scale_fill_colorblind()
head(df.stability.summary)
df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_count() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
geom_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
mutate(value.stability =case_when(value.stability>100~100)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
geom_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
summary(df.stability.summary$ratio.i)
df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability>100~100)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
geom_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability>100~100)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
df.detailed <- df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100))
summary(df.detailed$value.stability)
df.detailed <- df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability))
summary(df.detailed$value.stability)
df.detailed <- df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100,
T ~ value.stability))
summary(df.detailed$value.stability)
df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100,
T ~ value.stability)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary%>%
ggplot(aes(fill=as.factor(function.int))) +
stat_count(aes(x=synchrony.significance), na.rm= T) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100,
T ~ value.stability)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary%>%
gather(eigB.j , eigB.i, key= "eigB", value="value.eigB") %>%
filter(!is.na(value.eigB)) %>%
ggplot(aes(x=comp.com, y=value.eigB)) +
stat_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary%>%
filter(external_factor =="No external factor") %>%
gather(eigB.j , eigB.i, key= "eigB", value="value.eigB") %>%
filter(!is.na(value.eigB)) %>%
ggplot(aes(x=comp.com, y=value.eigB)) +
stat_boxplot() +
facet_wrap(.~function.int) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary %>%
filter(!is.na(synchrony.short)) %>%
ggplot(aes(x=comp.com, y=synchrony.short)) +
stat_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
#---- detailed visualisation -----
df.detailed.stability <- df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100,
T ~ value.stability)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_boxplot() +
facet_wrap(as.factor(external_factor)~function.int) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100,
T ~ value.stability)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_boxplot() +
facet_wrap(.~function.name) +
theme_bw() +
scale_fill_colorblind()
df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100,
T ~ value.stability)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
scale_fill_colorblind()
#---- detailed visualisation -----
df.detailed.stability <- df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100,
T ~ value.stability)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
scale_fill_colorblind()
df.detailed.synchrony <- df.stability.summary %>%
filter(external_factor =="No external factor") %>%
filter(!is.na(synchrony.short)) %>%
ggplot(aes(x=comp.com, y=synchrony.short)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
scale_fill_colorblind()
df.detailed.oscillation <-  df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(eigB.j , eigB.i, key= "eigB", value="value.eigB") %>%
filter(!is.na(value.eigB)) %>%
ggplot(aes(x=comp.com, y=value.eigB)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
scale_fill_colorblind()
df.detailed.oscillation
df.detailed.oscillation <-  df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(eigB.j , eigB.i, key= "eigB", value="value.eigB") %>%
filter(!is.na(value.eigB)) %>%
ggplot(aes(x=comp.com, y=value.eigB)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
theme(axis.text.x= element_text(size=16,angle=70))
df.detailed.oscillation
df.detailed.oscillation <-  df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(eigB.j , eigB.i, key= "eigB", value="value.eigB") %>%
filter(!is.na(value.eigB)) %>%
ggplot(aes(x=comp.com, y=value.eigB)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
theme(axis.text.x= element_text(size=16,angle=70, hjust=1))
df.detailed.oscillation
#---- detailed visualisation -----
df.detailed.stability <- df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(ratio.i,ratio.j, key="stability",value="value.stability" ) %>%
filter(!is.na(value.stability)) %>%
mutate(value.stability =case_when(value.stability > 100 ~ 100,
T ~ value.stability)) %>%
ggplot(aes(x=comp.com, y=value.stability)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
theme(axis.text.x= element_text(size=16,angle=70, hjust=1))
df.detailed.synchrony <- df.stability.summary %>%
filter(external_factor =="No external factor") %>%
filter(!is.na(synchrony.short)) %>%
ggplot(aes(x=comp.com, y=synchrony.short)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
theme(axis.text.x= element_text(size=16,angle=70, hjust=1))
df.detailed.oscillation <-  df.stability.summary %>%
filter(external_factor =="No external factor") %>%
gather(eigB.j , eigB.i, key= "eigB", value="value.eigB") %>%
filter(!is.na(value.eigB)) %>%
ggplot(aes(x=comp.com, y=value.eigB)) +
stat_boxplot() +
facet_wrap(.~function.name, nrow=1) +
theme_bw() +
theme(axis.text.x= element_text(size=16,angle=70, hjust=1))
library(shiny); runApp('shiny/functions.R')
runApp('shiny/functions.R')
runApp('shiny/functions.R')
runApp('shiny/functions.R')
# visualisation
#my_cols <- c("#AA4499", "#DDCC77","#88CCEE", "#44AA99")
cols_interaction <- c( "#DDCC77","#661100","#117733")
com.comp.plot <- ggplot(df.min.abun.horyzontal[df.min.abun.horyzontal$external_factor =="No external factor",],
aes( x=as.factor(comp.com),
fill=as.factor(Interspecific.interaction),
color=as.factor(Interspecific.interaction) )) +
geom_bar()+
#labels=c("run away population","no species","1-species","2-species")) +
scale_color_manual(values = darken(cols_interaction, amount = .1)) +
#scale_pattern_fill_manual(values = my_cols) +
scale_fill_manual(
values = cols_interaction) +
facet_wrap(.~function.name,nrow=1) +
scale_y_continuous(limits=c(0,500), expand = c(0, 0)) +
scale_x_discrete(labels = c("run away","no species","one-species","two-species")) +
theme_bw() +
labs(y="Number of simulated communities", x="",
fill=expression(paste("Initial interaction value ", alpha['0,i,j'])))+
#title="Number of communities with one or two species \nhaving a positive or null growth rate \nwhen low AND a positive abundance")+
guides(color="none") +
theme( legend.key.size = unit(1, 'cm'),
legend.position = "bottom",
strip.background = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text = element_text(size=20),
legend.text=element_text(size=16),
legend.title=element_text(size=16),
#axis.ticks.x=element_blank(),
axis.text.x= element_text(size=16, angle=66, hjust=1),
axis.text.y= element_text(size=20),
title=element_text(size=16))
com.comp.plot
ggsave(com.comp.plot,
file = "figures/com.comp.plot.pdf")
library(shiny); runApp('shiny/functions.R')
